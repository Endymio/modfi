After watching yesterday the live developer review of Google Wave I became convinced that it has the potential
to change how we communicate and collaborate electronically in the future. And by the amount of news and
discussion around the web it seems like I’m not the only one who believes so. Naturally a lot the media
attention is simply caused by the fact that everything Google does is noteworthy.

---

However, if you look beneath the surface there are some intriguing aspects that give substance to the hype.
A lot of people have dismissed Google Wave as a glorified email client with embedded instant messaging or
a new form of social media. These are understandable reactions if you don’t consider what allows Google Wave
to provide these functionalities. The fact is that both the server and client components of Google Wave are
powered by the Google Wave protocol. And this protocol is the foundation that allows Google Wave to provide
instant messaging, email like conversation, forums, voting applications and collaboration.

Further proof of this is the fact that both the client and server will be published with open source license
and the real push is to make the Google Wave protocol as universal as http is currently. Without the protocol
this would be the same as if Gmail, Facebook, Twitter or Salesforce would have their client and server code
released under open source license.

## So what Google Wave is?

As with anything new, we are left with analogies to try and explain this new service. The best one I’ve come
around is as follows: “Google wave is a shared media object which can be edited concurrently by many users.”
This definition captures the essence of Google Wave and the reason for its existence. Another way to look at
Google Wave is to look what components make the full solution.

## Client application

The client application is a web application similar to Gmail. It allows the creation of new Waves, editing them,
keeping contact lists and other tasks that are required to actually modify and distribute the documents. By
itself the client application is not revolutionary, but it is another demonstration how close web based
applications have come to desktop applications.

## Server / Platform

The server is responsible for storing the documents and communicating with other servers and ultimately distributing
the contents of the Wave. In addition, it is possible to create server side gadgets and robots for monitoring waves.
In that way the server is also a platform for extending the functionality of the Google Wave. This gives Google Wave
a lot of potential by not limiting the functionality to a predefined set of operations. It is very probable that an
ecosystem of plugins and extensions will arise, just like with Firefox and its plugins.

## The Google Wave protocol

The Google Wave protocol is an extension of XMPP-protocol and some might say that it is an evolutionary and not a
revolutionary protocol. And from a technical standpoint it is a fact. As with all protocols, the usefulness of it
depends on what it allows the developers to do and is it scalable enough to provide functionality that the original
developers didn’t anticipate or even dream of.

And here lies the biggest question mark over Google Wave. If the protocol is resilient enough and proves to be
scalable it might very well provide a new foundation in internet communication. However, if the protocol falters
or it is hard to implement, it might be the downfall of Google Wave.

## Conclusion

Looking at the demonstration it seems that the protocol and the whole architecture is flexible enough to support
many kinds of operations and use cases. It allows instant messaging, collaborative editing, push content for
websites and blogs, robots monitoring discussions and gadgets for gaming, voting etc. In my opinion, this
multitude of opportunities is the decisive factor why Google Wave might be able to live up to the hype surrounding it.
